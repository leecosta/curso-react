{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\012963631\\\\Documents\\\\Front End\\\\React\\\\react1-4\\\\01-starting-project\\\\src\\\\App.js\";\nimport React from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\"; // https://swapi.dev/api/films\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n\n  function fetchMoviesHandler() {\n    // dentro do fetch passar o url que vc quer enviar a request, por padrão as solicitações são get\n    fetch(\"https://swapi.dev/api/films\").then(response => {\n      return response.json(); //transformando o arquivo\n    }).then(data => {\n      //results é um objeto dentro do arquivo\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.releaseDate\n        };\n      });\n      setMovies(transformedMovies);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/012963631/Documents/Front End/React/react1-4/01-starting-project/src/App.js"],"names":["React","MoviesList","App","movies","setMovies","useState","fetchMoviesHandler","fetch","then","response","json","data","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP,C,CAEA;;AACA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASC,kBAAT,GAA8B;AAC5B;AACAC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP,CADkB,CACM;AACzB,KAHH,EAIGF,IAJH,CAISG,IAAD,IAAU;AACd;AACA,YAAMC,iBAAiB,GAAGD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;AACxD,eAAO;AACLC,UAAAA,EAAE,EAAED,SAAS,CAACE,UADT;AAELC,UAAAA,KAAK,EAAEH,SAAS,CAACG,KAFZ;AAGLC,UAAAA,WAAW,EAAEJ,SAAS,CAACK,aAHlB;AAILC,UAAAA,WAAW,EAAEN,SAAS,CAACM;AAJlB,SAAP;AAMD,OAPyB,CAA1B;AAQAjB,MAAAA,SAAS,CAACQ,iBAAD,CAAT;AACD,KAfH;AAgBD;;AAED,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAET,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAUD;;AAED,eAAeD,GAAf","sourcesContent":["import React from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\n// https://swapi.dev/api/films\nfunction App() {\n  const [movies, setMovies] = useState([]);\n\n  function fetchMoviesHandler() {\n    // dentro do fetch passar o url que vc quer enviar a request, por padrão as solicitações são get\n    fetch(\"https://swapi.dev/api/films\")\n      .then((response) => {\n        return response.json(); //transformando o arquivo\n      })\n      .then((data) => {\n        //results é um objeto dentro do arquivo\n        const transformedMovies = data.results.map((movieData) => {\n          return {\n            id: movieData.episode_id,\n            title: movieData.title,\n            openingText: movieData.opening_crawl,\n            releaseDate: movieData.releaseDate,\n          };\n        });\n        setMovies(transformedMovies);\n      });\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={movies} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}