{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\012963631\\\\Documents\\\\Front End\\\\React\\\\react1-7-Submit Forms\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [inputIsTouched, setInputIsTouched] = useState(false);\n  const [emailIsTouched, setEmailIsTouched] = useState(false);\n  const nameIsValid = enteredName.trim() !== \"\";\n  const nameInputISInvalid = !nameIsValid && inputIsTouched;\n  const emailIsValid = enteredEmail.trim() !== \"\";\n  const nameEmailISInvalid = !emailIsValid && emailIsTouched;\n  let formIsValid = false;\n\n  if (nameIsValid) {\n    formIsValid = true;\n  }\n\n  const emailHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const eventHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const blurEmailEventHandler = event => {\n    setEmailIsTouched(true);\n  };\n\n  const blurEventHandler = event => {\n    setInputIsTouched(true);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setInputIsTouched(false);\n    setEnteredName(\"\");\n    setEmailIsTouched(false);\n    setEnteredEmail(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputISInvalid ? \"form-control invalid\" : \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: eventHandler //lost focus means onBlur\n        ,\n        onBlur: blurEventHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), nameInputISInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \" Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameEmailISInvalid ? \"form-control invalid\" : \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailHandler //lost focus means onBlur\n        ,\n        onBlur: blurEmailEventHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), nameEmailISInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \" Email must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"XkOcyYfgLlb8h5gOpI6s7rINdDk=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/012963631/Documents/Front End/React/react1-7-Submit Forms/01-starting-project/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredEmail","setEnteredEmail","inputIsTouched","setInputIsTouched","emailIsTouched","setEmailIsTouched","nameIsValid","trim","nameInputISInvalid","emailIsValid","nameEmailISInvalid","formIsValid","emailHandler","event","target","value","eventHandler","blurEmailEventHandler","blurEventHandler","formSubmitHandler","preventDefault"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [inputIsTouched, setInputIsTouched] = useState(false);\n  const [emailIsTouched, setEmailIsTouched] = useState(false);\n\n  const nameIsValid = enteredName.trim() !== \"\";\n  const nameInputISInvalid = !nameIsValid && inputIsTouched;\n  const emailIsValid = enteredEmail.trim() !== \"\";\n  const nameEmailISInvalid = !emailIsValid && emailIsTouched;\n  let formIsValid = false;\n\n  if (nameIsValid) {\n    formIsValid = true;\n  }\n\n  const emailHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const eventHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const blurEmailEventHandler = (event) => {\n    setEmailIsTouched(true);\n  };\n\n  const blurEventHandler = (event) => {\n    setInputIsTouched(true);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    setInputIsTouched(false);\n    setEnteredName(\"\");\n    setEmailIsTouched(false);\n    setEnteredEmail(\"\");\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div\n        className={nameInputISInvalid ? \"form-control invalid\" : \"form-control\"}\n      >\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={eventHandler}\n          //lost focus means onBlur\n          onBlur={blurEventHandler}\n          value={enteredName}\n        />\n        {nameInputISInvalid && (\n          <p className=\"error-text\"> Name must not be empty</p>\n        )}\n      </div>\n      <div\n        className={nameEmailISInvalid ? \"form-control invalid\" : \"form-control\"}\n      >\n        <label htmlFor=\"name\">Your Email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          onChange={emailHandler}\n          //lost focus means onBlur\n          onBlur={blurEmailEventHandler}\n          value={enteredEmail}\n        />\n        {nameEmailISInvalid && (\n          <p className=\"error-text\"> Email must not be empty</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}