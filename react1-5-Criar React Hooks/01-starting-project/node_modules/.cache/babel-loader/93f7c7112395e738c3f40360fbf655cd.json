{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // Para o react saber que é React Hook, começar obrigatoriamente a função com use\n\nconst useCounter = function () {\n  _s();\n\n  let forwards = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (forwards) {\n        setCounter(prevCounter => prevCounter + 1);\n      } else {\n        setCounter(prevCounter => prevCounter - 1);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [forwards]);\n  return counter;\n};\n\n_s(useCounter, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");\n\nexport default useCounter;","map":{"version":3,"sources":["C:/Users/012963631/Documents/Front End/React/react1-5/01-starting-project/src/hooks/use-counter.js"],"names":["useState","useEffect","useCounter","forwards","counter","setCounter","interval","setInterval","prevCounter","clearInterval"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,MAAMC,UAAU,GAAG,YAAqB;AAAA;;AAAA,MAApBC,QAAoB,uEAAT,IAAS;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjC,UAAIJ,QAAJ,EAAc;AACZE,QAAAA,UAAU,CAAEG,WAAD,IAAiBA,WAAW,GAAG,CAAhC,CAAV;AACD,OAFD,MAEO;AACLH,QAAAA,UAAU,CAAEG,WAAD,IAAiBA,WAAW,GAAG,CAAhC,CAAV;AACD;AACF,KAN2B,EAMzB,IANyB,CAA5B;AAQA,WAAO,MAAMC,aAAa,CAACH,QAAD,CAA1B;AACD,GAVQ,EAUN,CAACH,QAAD,CAVM,CAAT;AAYA,SAAOC,OAAP;AACD,CAhBD;;GAAMF,U;;AAkBN,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n// Para o react saber que é React Hook, começar obrigatoriamente a função com use\r\nconst useCounter = (forwards = true) => {\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (forwards) {\r\n        setCounter((prevCounter) => prevCounter + 1);\r\n      } else {\r\n        setCounter((prevCounter) => prevCounter - 1);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [forwards]);\r\n\r\n  return counter;\r\n};\r\n\r\nexport default useCounter;\r\n"]},"metadata":{},"sourceType":"module"}