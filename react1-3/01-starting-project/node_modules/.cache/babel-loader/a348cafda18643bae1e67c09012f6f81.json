{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\012963631\\\\Documents\\\\Front End\\\\React\\\\react1-3\\\\01-starting-project\\\\src\\\\components\\\\UI\\\\Input\\\\Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useImperativeHandle, useRef } from \"react\";\nimport classes from \"./Input.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  // Toda vez que quiser usar o input como referência\n  const inputRef = useRef();\n\n  const activate = () => {\n    inputRef.current.focus();\n  }; // primeiro parâmetro é o valor que a função irá usar para chamar o objeto, segundo parâmetro é um objeto que terá todas as variáveis que você conseguirá usar externamente\n\n\n  useImperativeHandle(ref, () => {\n    return {\n      focus: activate //activate é o nome daqui e focus é o nome que irá usar externamente\n\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.control} ${props.isValid === false ? classes.invalid : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: props.id,\n      id: props.id,\n      value: props.value,\n      onChange: props.onChangeHandler,\n      onBlur: props.onValidate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}, \"Ag7bjDUBywlCYPNfrolbitV68Mw=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = Input;\nexport default Input;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input$React.forwardRef\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"sources":["C:/Users/012963631/Documents/Front End/React/react1-3/01-starting-project/src/components/UI/Input/Input.js"],"names":["React","useImperativeHandle","useRef","classes","Input","forwardRef","props","ref","inputRef","activate","current","focus","control","isValid","invalid","id","label","value","onChangeHandler","onValidate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,mBAAhB,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,KAAK,gBAAGJ,KAAK,CAACK,UAAN,SAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AAC7C;AACA,QAAMC,QAAQ,GAAGN,MAAM,EAAvB;;AAEA,QAAMO,QAAQ,GAAG,MAAM;AACrBD,IAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;AACD,GAFD,CAJ6C,CAQ7C;;;AACAV,EAAAA,mBAAmB,CAACM,GAAD,EAAM,MAAM;AAC7B,WAAO;AACLI,MAAAA,KAAK,EAAEF,QADF,CACY;;AADZ,KAAP;AAGD,GAJkB,CAAnB;AAMA,sBACE;AACE,IAAA,SAAS,EAAG,GAAEN,OAAO,CAACS,OAAQ,IAC5BN,KAAK,CAACO,OAAN,KAAkB,KAAlB,GAA0BV,OAAO,CAACW,OAAlC,GAA4C,EAC7C,EAHH;AAAA,4BAKE;AAAO,MAAA,OAAO,EAAER,KAAK,CAACS,EAAtB;AAAA,gBAA2BT,KAAK,CAACU;AAAjC;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AACE,MAAA,GAAG,EAAER,QADP;AAEE,MAAA,IAAI,EAAEF,KAAK,CAACS,EAFd;AAGE,MAAA,EAAE,EAAET,KAAK,CAACS,EAHZ;AAIE,MAAA,KAAK,EAAET,KAAK,CAACW,KAJf;AAKE,MAAA,QAAQ,EAAEX,KAAK,CAACY,eALlB;AAME,MAAA,MAAM,EAAEZ,KAAK,CAACa;AANhB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAhCa;AAAA,UASZlB,mBATY;AAAA,GAAd;MAAMG,K;AAkCN,eAAeA,KAAf","sourcesContent":["import React, { useImperativeHandle, useRef } from \"react\";\r\n\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n  // Toda vez que quiser usar o input como referência\r\n  const inputRef = useRef();\r\n\r\n  const activate = () => {\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  // primeiro parâmetro é o valor que a função irá usar para chamar o objeto, segundo parâmetro é um objeto que terá todas as variáveis que você conseguirá usar externamente\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      focus: activate, //activate é o nome daqui e focus é o nome que irá usar externamente\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={`${classes.control} ${\r\n        props.isValid === false ? classes.invalid : \"\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      <input\r\n        ref={inputRef}\r\n        type={props.id}\r\n        id={props.id}\r\n        value={props.value}\r\n        onChange={props.onChangeHandler}\r\n        onBlur={props.onValidate}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}